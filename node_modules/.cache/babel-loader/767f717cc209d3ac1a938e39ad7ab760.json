{"ast":null,"code":"var _jsxFileName = \"/home/meric/elastic/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt from './datatypes.txt';\nimport json from './config/simple.json';\nvar formJson = {\n  \"name\": \"Query Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitHandler = event => {\n      let json = JSON.stringify(event, null, 4);\n      console.log(json);\n      this.generateForm();\n    };\n\n    this.generateForm = () => {\n      fetch(txt).then(r => r.text()).then(text => {\n        let myarray = text.split('\\n');\n        myarray.map((element, i) => {\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n            var optionData = {\n              \"options\": []\n            };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\n                \"display\": option\n              });\n            });\n            data = {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData.options\n            };\n          } else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            data = {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          } //console.log(data);\n\n\n          formJson.fields.push(data);\n          console.log(formJson);\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(SplitterLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Build a Query !\", React.createElement(DynamicForm, {\n      id: \"form\",\n      ref: \"form\",\n      config: formJson,\n      onSubmit: event => this.submitHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Panel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"sdknsdjsk\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/meric/elastic/src/App.js"],"names":["React","Component","SplitterLayout","Panel","DynamicForm","myJson","txt","json","formJson","App","submitHandler","event","JSON","stringify","console","log","generateForm","fetch","then","r","text","myarray","split","map","element","i","array","length","name","replace","type","options","optionsArray","optionData","data","option","push","fields","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt from './datatypes.txt';\nimport json from './config/simple.json'\n\nvar formJson = {\n  \"name\": \"Query Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n\n\n  submitHandler = (event) => {\n    let json = JSON.stringify(event, null, 4);\n    console.log(json);\n    this.generateForm();\n  }\n\n\n  generateForm = () => {\n    fetch(txt)\n      .then((r) => r.text())\n      .then(text => {\n        let myarray = text.split('\\n');\n\n        myarray.map((element, i) => {\n\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n\n            var optionData = {\"options\": []};\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\"display\" : option});\n            })\n\n            data = {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData.options\n            };\n          }\n\n          else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n\n            data = {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n\n          //console.log(data);\n          formJson.fields.push(data);\n          console.log(formJson);\n\n        })\n\n\n\n      })\n  }\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <SplitterLayout>\n          <div>Build a Query !\n            <DynamicForm id=\"form\" ref=\"form\" config={formJson} onSubmit={(event) => this.submitHandler(event)}></DynamicForm>\n          </div>\n          <div>\n            <Panel>\n              {\"sdknsdjsk\"}\n            </Panel>\n          </div>\n        </SplitterLayout>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}