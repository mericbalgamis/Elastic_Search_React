{"ast":null,"code":"'use strict';\n\nvar _require = require('util'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../core'),\n    firstDigitPos = _require2.util.firstDigitPos,\n    REWRITE_METHOD_SET = _require2.consts.REWRITE_METHOD_SET;\n/**\n * Validate the rewrite method.\n *\n * @private\n * @param {string} method\n * @param {string} paramName\n * @param {string} refUrl\n * @throws {Error} If the given rewrite method is not valid.\n */\n\n\nexports.validateRewiteMethod = function validateRewiteMethod(method, paramName, refUrl) {\n  // NOTE: This does not check for lower case comparison.\n  if (!REWRITE_METHOD_SET.has(method)) {\n    var rewriteMethodName = method.substring(0, firstDigitPos(method)) + 'N';\n\n    if (!REWRITE_METHOD_SET.has(rewriteMethodName)) {\n      console.log('See ' + refUrl);\n      console.warn('Got \\'' + paramName + '\\' - ' + method);\n      throw new Error('The \\'' + paramName + '\\' parameter should belong to ' + inspect(REWRITE_METHOD_SET));\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}