{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isNil = require('lodash.isnil');\n\nvar _require = require('../../core'),\n    Query = _require.Query,\n    checkType = _require.util.checkType;\n/**\n * Filters documents that only have the provided ids.\n * Note, this query uses the _uid field.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-ids-query.html)\n *\n * @example\n * const qry = esb.idsQuery('my_type', ['1', '4', '100']);\n *\n * @param {Array|string=} type The elasticsearch doc type\n * @param {Array=} ids List of ids to fiter on.\n *\n * @extends Query\n */\n\n\nvar IdsQuery = function (_Query) {\n  (0, _inherits3.default)(IdsQuery, _Query); // eslint-disable-next-line require-jsdoc\n\n  function IdsQuery(type, ids) {\n    (0, _classCallCheck3.default)(this, IdsQuery);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (IdsQuery.__proto__ || Object.getPrototypeOf(IdsQuery)).call(this, 'ids'));\n\n    if (!isNil(type)) _this._queryOpts.type = type;\n    if (!isNil(ids)) _this.values(ids);\n    return _this;\n  }\n  /**\n   * Sets the elasticsearch doc type to query on.\n   * The type is optional and can be omitted, and can also accept an array of values.\n   * If no type is specified, all types defined in the index mapping are tried.\n   *\n   * @param {Array<string>|string} type The elasticsearch doc type\n   * @returns {IdsQuery} returns `this` so that calls can be chained.\n   */\n\n\n  (0, _createClass3.default)(IdsQuery, [{\n    key: 'type',\n    value: function type(_type) {\n      this._queryOpts.type = _type;\n      return this;\n    }\n    /**\n     * Sets the list of ids to fiter on.\n     *\n     * @param {Array<string|number>} ids\n     * @returns {IdsQuery} returns `this` so that calls can be chained.\n     */\n\n  }, {\n    key: 'values',\n    value: function values(ids) {\n      checkType(ids, Array);\n      this._queryOpts.values = ids;\n      return this;\n    }\n    /**\n     * Sets the list of ids to fiter on.\n     * Alias for `values` method.\n     *\n     * @param {Array<string|number>} ids\n     * @returns {IdsQuery} returns `this` so that calls can be chained.\n     */\n\n  }, {\n    key: 'ids',\n    value: function ids(_ids) {\n      return this.values(_ids);\n    }\n  }]);\n  return IdsQuery;\n}(Query);\n\nmodule.exports = IdsQuery;","map":null,"metadata":{},"sourceType":"script"}