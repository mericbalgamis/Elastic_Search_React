{"ast":null,"code":"var _jsxFileName = \"/home/meric/elastic/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport CsvDownload from 'react-json-to-csv';\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt_input from './datatypes.txt';\nimport txt_output from './datatypes_output.txt';\nimport json from './config/simple.json';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\nimport { github } from 'react-json-pretty/themes/monikai.css';\nimport queryBuilder, { filtersAggregation } from 'elastic-builder';\nconst form_type = \"input\";\nconst output_query = {\n  \"size\": 0,\n  \"aggregations\": {\n    \"average_echo_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"minimum_echo_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"maximum_echo_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"max_repetition_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"min_repetition_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"average_repetition_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"max_slice_thickness\": {\n      \"max\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"min_slice_thickness\": {\n      \"min\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slice_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slab_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.MR_Spatial_Saturation_Sequence.Slab_Thickness.Value\"\n      }\n    },\n    \"max_age\": {\n      \"max\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"min_age\": {\n      \"min\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"average_age\": {\n      \"avg\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"max_flip_angle\": {\n      \"max\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"min_flip_angle\": {\n      \"min\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"average_flip_angle\": {\n      \"avg\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"max_SAR\": {\n      \"max\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"min_SAR\": {\n      \"min\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"average_SAR\": {\n      \"avg\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"max_Number_of_Averages\": {\n      \"max\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"min_Number_of_Averages\": {\n      \"min\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"average_Number_of_Averages\": {\n      \"avg\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    }\n  }\n};\n\nvar fileDownload = require('react-file-download');\n\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      let json = JSON.stringify(event, null, 4);\n      this.generateQuery(json); //console.log(json);\n    };\n\n    this.handleDownload = () => {\n      fileDownload(this.state.response, 'response.json');\n    };\n\n    this.handleCSV = () => {\n      fileDownload(this.state.response, 'response.json');\n    };\n\n    this.removeEmptyFields = (requestBody, name, field) => {\n      if (field == \"filter\") {\n        for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n          if (requestBody._body.query._body.bool.filter[i]._field.includes(name.replace(/ /g, '_'))) {\n            requestBody._body.query._body.bool.filter.splice(i, 1);\n          }\n        }\n      } else if (field == \"must\") {\n        for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n          if (requestBody._body.query._body.bool.must[i]._field.includes(name.replace(/ /g, '_'))) {\n            requestBody._body.query._body.bool.must.splice(i, 1);\n          }\n        }\n\n        return requestBody;\n      }\n    };\n\n    this.generateQuery = formResults => {\n      var form = JSON.parse(formResults);\n      let requestBodyUpdated; // Bool query\n\n      const requestBody = queryBuilder.requestBodySearch().query(queryBuilder.boolQuery().must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\").gt(form.data[1].value).lte(form.data[2].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\").gt(form.data[3].value).lte(form.data[4].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[5].name.replace(/ /g, '_') + \".Value\", form.data[5].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[6].name.replace(/ /g, '_') + \".Value\", form.data[6].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[7].name.replace(/ /g, '_') + \".Value\").gt(form.data[7].value).lte(form.data[8].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[9].name.replace(/ /g, '_') + \".Value\").gt(form.data[9].value).lte(form.data[10].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[11].name.replace(/ /g, '_') + \".Value\").gt(form.data[11].value).lte(form.data[12].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[13].name.replace(/ /g, '_') + \".Value\").gt(form.data[13].value).lte(form.data[14].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[15].name.replace(/ /g, '_') + \".Value\", form.data[15].value)));\n\n      for (var i = 0; i <= form.data.length - 1; i++) {\n        if (i != form.data.length - 1 && form.data[i].name == form.data[i + 1].name) {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"filter\");\n          }\n\n          i++;\n        } else if (i == form.data.length) {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\");\n          }\n        } else {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\");\n          }\n        }\n      }\n\n      console.log(requestBodyUpdated);\n      this.sendRequest(JSON.stringify(requestBodyUpdated));\n      /*\n      // Bool query\n      const requestBody = queryBuilder.requestBodySearch().query(\n      queryBuilder.boolQuery()\n        .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[0].name.replace(/ /g, '_')+\".Value\", form.data[0].value))\n        .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[1].name.replace(/ /g, '_')+\".Value\", form.data[1].value))\n        .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[2].name.replace(/ /g, '_')+\".Value\", form.data[2].value))\n        .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[3].name.replace(/ /g, '_')+\".Value\", form.data[3].value))\n        .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[4].name.replace(/ /g, '_')+\".Value\", form.data[4].value))\n      );\n      console.log(requestBody.toJSON())\n      for (var i = form.data.length - 1; i >= 0; i--) {\n        if (form.data[i].value == \"\" ) {\n          requestBody._body.query._body.bool.must.splice(i, 1);\n        }\n      }*/\n\n      console.log(requestBody);\n      this.sendRequest(JSON.stringify(requestBody));\n    };\n\n    this.state = {\n      form: formJson,\n      response: 'jghf'\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    axios.get().then(res => {\n      this.setState({\n        todo: res.data\n      });\n    });\n  }\n\n  sendRequest(requestBody) {\n    //console.log(\"handleclick\")\n    var panel = document.getElementById(\"resultPanel\");\n    console.log(\"requestBody: \" + requestBody);\n    fetch('http://127.0.0.1:5000/query', {\n      method: \"POST\",\n      //Request Type \n      body: requestBody,\n      //post body \n      headers: {\n        //Header Defination \n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()) //If response is in json then in success\n    .then(responseJson => {\n      //alert(JSON.stringify(responseJson));\n      console.log(responseJson);\n      const json = JSON.stringify(responseJson, null, 4);\n      this.setState({\n        response: json\n      });\n    }) //If response is not in json then in error \n    .catch(error => {\n      alert(JSON.stringify(error)); //console.error(error);\n    });\n  }\n\n  componentWillMount() {\n    if (form_type == \"input\") {\n      fetch(txt_input).then(r => r.text()).then(text => {\n        let myarray = text.split('\\n');\n        let dataArray = myarray.map((element, i) => {\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n            var optionData = {\n              \"options\": []\n            };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\n                \"display\": option\n              });\n            });\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData\n            };\n          } else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n        });\n        this.setState({\n          form: {\n            fields: dataArray\n          }\n        });\n        console.log(dataArray);\n      });\n    } else if (form_type == \"output\") {\n      fetch(txt_output).then(r => r.text()).then(text => {\n        let myarray = text.split('\\n');\n        let dataArray = myarray.map((element, i) => {\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n            var optionData = {\n              \"options\": []\n            };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\n                \"display\": option\n              });\n            });\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData\n            };\n          } else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n        });\n        this.setState({\n          form: {\n            fields: dataArray\n          }\n        });\n        console.log(dataArray);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, React.createElement(SplitterLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(DynamicForm, {\n      id: \"form\",\n      config: this.state.form,\n      onSubmit: event => this.submitHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PanelRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"download\",\n      onClick: () => this.handleDownload(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Download\"), React.createElement(CsvDownload, {\n      data: this.state.response,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, \"Download as CSV\"), React.createElement(JSONPretty, {\n      id: \"resultPanel\",\n      json: this.state.response,\n      theme: github,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/meric/elastic/src/App.js"],"names":["React","Component","SplitterLayout","CsvDownload","Panel","DynamicForm","myJson","txt_input","txt_output","json","axios","JSONPretty","github","queryBuilder","filtersAggregation","form_type","output_query","fileDownload","require","formJson","App","constructor","props","submitHandler","event","JSON","stringify","generateQuery","handleDownload","state","response","handleCSV","removeEmptyFields","requestBody","name","field","i","_body","query","bool","filter","length","_field","includes","replace","splice","must","formResults","form","parse","requestBodyUpdated","requestBodySearch","boolQuery","matchQuery","data","value","rangeQuery","gt","lte","console","log","sendRequest","handleClick","bind","get","then","res","setState","todo","panel","document","getElementById","fetch","method","body","headers","responseJson","catch","error","alert","componentWillMount","r","text","myarray","split","dataArray","map","element","array","type","options","optionsArray","optionData","option","push","fields","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport CsvDownload from 'react-json-to-csv'\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt_input from './datatypes.txt';\nimport txt_output from './datatypes_output.txt';\nimport json from './config/simple.json';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\nimport { github } from 'react-json-pretty/themes/monikai.css';\nimport queryBuilder, { filtersAggregation } from 'elastic-builder';\n\nconst form_type = \"input\";\nconst output_query = \n{\n  \"size\": 0,\n  \"aggregations\": {\n      \"average_echo_time\": {\n          \"avg\": {\n              \"field\": \"DCMs.Echo_Time.Value\"\n          }\n      },\n      \"minimum_echo_time\": {\n          \"min\": {\n              \"field\": \"DCMs.Echo_Time.Value\"\n          }\n      },\n      \"maximum_echo_time\": {\n          \"max\": {\n              \"field\": \"DCMs.Echo_Time.Value\"\n          }\n      },\n      \"max_repetition_time\": {\n          \"max\": {\n              \"field\": \"DCMs.Repetition_Time.Value\"\n          }\n      },\n      \"min_repetition_time\": {\n          \"min\": {\n              \"field\": \"DCMs.Repetition_Time.Value\"\n          }\n      },\n      \"average_repetition_time\": {\n          \"avg\": {\n              \"field\": \"DCMs.Repetition_Time.Value\"\n          }\n      },\n      \"max_slice_thickness\": {\n          \"max\": {\n              \"field\": \"DCMs.Slice_Thickness.Value\"\n          }\n      },\n      \"min_slice_thickness\": {\n          \"min\": {\n              \"field\": \"DCMs.Slice_Thickness.Value\"\n          }\n      },\n      \"average_slice_thickness\": {\n          \"avg\": {\n              \"field\": \"DCMs.Slice_Thickness.Value\"\n          }\n      },\n      \"average_slab_thickness\": {\n          \"avg\": {\n              \"field\": \"DCMs.MR_Spatial_Saturation_Sequence.Slab_Thickness.Value\"\n          }\n      },\n      \"max_age\": {\n          \"max\": {\n              \"field\": \"DCMs.AGE.Value\"\n          }\n      },\n      \"min_age\": {\n          \"min\": {\n              \"field\": \"DCMs.AGE.Value\"\n          }\n      },\n      \"average_age\": {\n          \"avg\": {\n              \"field\": \"DCMs.AGE.Value\"\n          }\n      },\n      \"max_flip_angle\": {\n          \"max\": {\n              \"field\": \"DCMs.Flip_Angle.Value\"\n          }\n      },\n      \"min_flip_angle\": {\n          \"min\": {\n              \"field\": \"DCMs.Flip_Angle.Value\"\n          }\n      },\n      \"average_flip_angle\": {\n          \"avg\": {\n              \"field\": \"DCMs.Flip_Angle.Value\"\n          }\n      },\n      \"max_SAR\": {\n          \"max\": {\n              \"field\": \"DCMs.SAR.Value\"\n          }\n      },\n      \"min_SAR\": {\n          \"min\": {\n              \"field\": \"DCMs.SAR.Value\"\n          }\n      },\n      \"average_SAR\": {\n          \"avg\": {\n              \"field\": \"DCMs.SAR.Value\"\n          }\n      },\n      \"max_Number_of_Averages\": {\n          \"max\": {\n              \"field\": \"DCMs.Number_of_Averages.Value\"\n          }\n      },\n      \"min_Number_of_Averages\": {\n          \"min\": {\n              \"field\": \"DCMs.Number_of_Averages.Value\"\n          }\n      },\n      \"average_Number_of_Averages\": {\n          \"avg\": {\n              \"field\": \"DCMs.Number_of_Averages.Value\"\n          }\n      }\n  }\n};\n\nvar fileDownload = require('react-file-download');\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n      form: formJson,\n      response: 'jghf'\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    axios.get()\n      .then(res => {\n        this.setState({\n          todo: res.data\n        })\n      })\n  }\n\n  sendRequest(requestBody) {\n    //console.log(\"handleclick\")\n    var panel = document.getElementById(\"resultPanel\");\n    console.log(\"requestBody: \" + requestBody)\n    fetch('http://127.0.0.1:5000/query', {\n      method: \"POST\",//Request Type \n      body: requestBody,//post body \n      headers: {//Header Defination \n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      //If response is in json then in success\n      .then((responseJson) => {\n        //alert(JSON.stringify(responseJson));\n        console.log(responseJson);\n        const json = JSON.stringify(responseJson, null, 4)\n\n\n        this.setState({\n\n          response: json\n\n        });\n      })\n      //If response is not in json then in error \n      .catch((error) => {\n        alert(JSON.stringify(error));\n        //console.error(error);\n      });\n\n\n  }\n\n  submitHandler = (event) => {\n    let json = JSON.stringify(event, null, 4);\n    this.generateQuery(json);\n    //console.log(json);\n  }\n\n\n  handleDownload = () => {\n    fileDownload(this.state.response, 'response.json');\n  }\n\n  handleCSV = () => {\n    fileDownload(this.state.response, 'response.json');\n  }\n\n  removeEmptyFields = (requestBody, name, field) => {\n    if (field == \"filter\") {\n      for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n\n        if (requestBody._body.query._body.bool.filter[i]._field.includes(name.replace(/ /g, '_'))) {\n          requestBody._body.query._body.bool.filter.splice(i, 1)\n\n        }\n      }\n\n\n    }\n    else if (field == \"must\") {\n      for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n        if (requestBody._body.query._body.bool.must[i]._field.includes(name.replace(/ /g, '_'))) {\n          requestBody._body.query._body.bool.must.splice(i, 1)\n\n        }\n      }\n      return requestBody;\n\n    }\n\n  }\n\n  generateQuery = (formResults) => {\n\n    var form = JSON.parse(formResults);\n    let requestBodyUpdated;\n\n\n    // Bool query\n    const requestBody = queryBuilder.requestBodySearch().query(\n      queryBuilder.boolQuery()\n        .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\").gt(form.data[1].value).lte(form.data[2].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\").gt(form.data[3].value).lte(form.data[4].value))\n        .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[5].name.replace(/ /g, '_') + \".Value\", form.data[5].value))\n        .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[6].name.replace(/ /g, '_') + \".Value\", form.data[6].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[7].name.replace(/ /g, '_') + \".Value\").gt(form.data[7].value).lte(form.data[8].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[9].name.replace(/ /g, '_') + \".Value\").gt(form.data[9].value).lte(form.data[10].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[11].name.replace(/ /g, '_') + \".Value\").gt(form.data[11].value).lte(form.data[12].value))\n        .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[13].name.replace(/ /g, '_') + \".Value\").gt(form.data[13].value).lte(form.data[14].value))\n        .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[15].name.replace(/ /g, '_') + \".Value\", form.data[15].value))\n    );\n\n    for (var i = 0; i <= form.data.length - 1; i++) {\n\n      if (i != form.data.length - 1 && form.data[i].name == form.data[i + 1].name) {\n        if (form.data[i].value == \"\") {\n          requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"filter\")\n        }\n        i++;\n      }\n      else if (i == form.data.length) {\n        if (form.data[i].value == \"\") {\n          requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\")\n        }\n      }\n      else {\n        if (form.data[i].value == \"\") {\n          requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\")\n\n        }\n      }\n    }\n\n    console.log(requestBodyUpdated)\n    this.sendRequest(JSON.stringify(requestBodyUpdated));\n\n    /*\n  // Bool query\n  const requestBody = queryBuilder.requestBodySearch().query(\n    queryBuilder.boolQuery()\n      .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[0].name.replace(/ /g, '_')+\".Value\", form.data[0].value))\n      .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[1].name.replace(/ /g, '_')+\".Value\", form.data[1].value))\n      .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[2].name.replace(/ /g, '_')+\".Value\", form.data[2].value))\n      .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[3].name.replace(/ /g, '_')+\".Value\", form.data[3].value))\n      .must(queryBuilder.matchQuery(\"DCMs.\"+form.data[4].name.replace(/ /g, '_')+\".Value\", form.data[4].value))\n  );\n    console.log(requestBody.toJSON())\n    for (var i = form.data.length - 1; i >= 0; i--) {\n      if (form.data[i].value == \"\" ) {\n        requestBody._body.query._body.bool.must.splice(i, 1);\n      }\n    }*/\n\n    console.log(requestBody)\n    this.sendRequest(JSON.stringify(requestBody));\n\n  }\n\n  componentWillMount() {\n    if (form_type == \"input\") {\n\n      fetch(txt_input)\n        .then((r) => r.text())\n        .then(text => {\n          let myarray = text.split('\\n');\n          let dataArray = myarray.map((element, i) => {\n\n\n            var array = element.split(' ');\n\n            if (array.length === 4) {\n\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n              let options = array[2];\n              options = options.replace(/\\)/g, '');\n              options = options.replace(/\\(/g, '');\n              let optionsArray = options.split(',');\n\n              var optionData = { \"options\": [] };\n              var data = {};\n              optionsArray.map((option, i) => {\n                optionData.options.push({ \"display\": option });\n              })\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\",\n                \"definition\": optionData\n              };\n\n            }\n\n            else if (array.length === 3) {\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\"\n              };\n            }\n\n          })\n\n          this.setState({\n            form: {\n              fields: dataArray\n            }\n          });\n          console.log(dataArray);\n\n        })\n    }\n    else if (form_type == \"output\") {\n\n\n      fetch(txt_output)\n        .then((r) => r.text())\n        .then(text => {\n          let myarray = text.split('\\n');\n          let dataArray = myarray.map((element, i) => {\n\n\n            var array = element.split(' ');\n\n            if (array.length === 4) {\n\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n              let options = array[2];\n              options = options.replace(/\\)/g, '');\n              options = options.replace(/\\(/g, '');\n              let optionsArray = options.split(',');\n\n              var optionData = { \"options\": [] };\n              var data = {};\n              optionsArray.map((option, i) => {\n                optionData.options.push({ \"display\": option });\n              })\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\",\n                \"definition\": optionData\n              };\n\n            }\n\n            else if (array.length === 3) {\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\"\n              };\n            }\n\n          })\n\n          this.setState({\n            form: {\n              fields: dataArray\n            }\n          });\n          console.log(dataArray);\n\n        })\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <SplitterLayout>\n          <div className=\"Form\">\n\n            <DynamicForm id=\"form\" config={this.state.form} onSubmit={(event) => this.submitHandler(event)}></DynamicForm>\n\n          </div>\n\n\n          <div className=\"PanelRight\">\n            <button id=\"download\" onClick={() => this.handleDownload()}>Download</button>\n            <CsvDownload data={this.state.response}>Download as CSV</CsvDownload>\n            <JSONPretty id=\"resultPanel\" json={this.state.response} theme={github} />\n          </div>\n        </SplitterLayout>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}