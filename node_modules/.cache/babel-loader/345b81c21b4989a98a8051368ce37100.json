{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isNil = require('lodash.isnil');\n\nvar BucketAggregationBase = require('./bucket-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-reverse-nested-aggregation.html';\n/**\n * A special single bucket aggregation that enables aggregating\n * on parent docs from nested documents. Effectively this\n * aggregation can break out of the nested block structure and\n * link to other nested structures or the root document,\n * which allows nesting other aggregations that arenâ€™t part of\n * the nested object in a nested aggregation.\n *\n * The `reverse_nested` aggregation must be defined inside a nested aggregation.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-reverse-nested-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .query(esb.matchQuery('name', 'led tv'))\n *     .agg(\n *         esb.nestedAggregation('comments', 'comments').agg(\n *             esb.termsAggregation('top_usernames', 'comments.username').agg(\n *                 esb.reverseNestedAggregation('comment_to_issue').agg(\n *                     esb.termsAggregation('top_tags_per_comment', 'tags')\n *                 )\n *             )\n *         )\n *     );\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} path Defines to what nested object field should be joined back.\n * The default is empty, which means that it joins back to the root / main document\n * level.\n *\n * @extends BucketAggregationBase\n */\n\nvar ReverseNestedAggregation = function (_BucketAggregationBas) {\n  (0, _inherits3.default)(ReverseNestedAggregation, _BucketAggregationBas); // eslint-disable-next-line require-jsdoc\n\n  function ReverseNestedAggregation(name, path) {\n    (0, _classCallCheck3.default)(this, ReverseNestedAggregation);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (ReverseNestedAggregation.__proto__ || Object.getPrototypeOf(ReverseNestedAggregation)).call(this, name, 'reverse_nested'));\n\n    if (!isNil(path)) _this._aggsDef.path = path;\n    return _this;\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on ReverseNestedAggregation\n   */\n\n\n  (0, _createClass3.default)(ReverseNestedAggregation, [{\n    key: 'field',\n    value: function field() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('field is not supported in ReverseNestedAggregation');\n    }\n    /**\n     * @override\n     * @throws {Error} This method cannot be called on ReverseNestedAggregation\n     */\n\n  }, {\n    key: 'script',\n    value: function script() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('script is not supported in ReverseNestedAggregation');\n    }\n    /**\n     * Sets the level to join back for subsequent aggregations in a multiple\n     * layered nested object types\n     *\n     * @param {string} path Defines to what nested object field should be joined back.\n     * The default is empty, which means that it joins back to the root / main document\n     * level.\n     * @returns {ReverseNestedAggregation} returns `this` so that calls can be chained\n     */\n\n  }, {\n    key: 'path',\n    value: function path(_path) {\n      this._aggsDef.path = _path;\n      return this;\n    }\n  }]);\n  return ReverseNestedAggregation;\n}(BucketAggregationBase);\n\nmodule.exports = ReverseNestedAggregation;","map":null,"metadata":{},"sourceType":"script"}