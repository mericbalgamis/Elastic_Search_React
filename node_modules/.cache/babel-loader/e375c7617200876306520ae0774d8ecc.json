{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _require = require('../core'),\n    Query = _require.Query;\n/**\n * The inverse of the `match_all` query, which matches no documents.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-all-query.html)\n *\n * @example\n * const qry = esb.matchNoneQuery();\n *\n * @extends Query\n */\n\n\nvar MatchNoneQuery = function (_Query) {\n  (0, _inherits3.default)(MatchNoneQuery, _Query); // eslint-disable-next-line require-jsdoc\n\n  function MatchNoneQuery() {\n    (0, _classCallCheck3.default)(this, MatchNoneQuery);\n    return (0, _possibleConstructorReturn3.default)(this, (MatchNoneQuery.__proto__ || Object.getPrototypeOf(MatchNoneQuery)).call(this, 'match_none'));\n  }\n\n  return MatchNoneQuery;\n}(Query);\n\nmodule.exports = MatchNoneQuery;","map":null,"metadata":{},"sourceType":"script"}