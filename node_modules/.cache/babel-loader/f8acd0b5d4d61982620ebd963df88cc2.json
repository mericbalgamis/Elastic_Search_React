{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PipelineAggregationBase = require('./pipeline-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-derivative-aggregation.html';\n/**\n * A parent pipeline aggregation which calculates the derivative of a\n * specified metric in a parent histogram (or date_histogram) aggregation.\n * The specified metric must be numeric and the enclosing histogram must\n * have min_doc_count set to 0 (default for histogram aggregations).\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-derivative-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date')\n *             .interval('month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *             .agg(esb.derivativeAggregation('sales_deriv', 'sales'))\n *     )\n *     .size(0);\n *\n * @example\n * // First and second order derivative of the monthly sales\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date')\n *             .interval('month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *             .agg(esb.derivativeAggregation('sales_deriv', 'sales'))\n *             .agg(esb.derivativeAggregation('sales_2nd_deriv', 'sales_deriv'))\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} bucketsPath The relative path of metric to aggregate over\n *\n * @extends PipelineAggregationBase\n */\n\nvar DerivativeAggregation = function (_PipelineAggregationB) {\n  (0, _inherits3.default)(DerivativeAggregation, _PipelineAggregationB); // eslint-disable-next-line require-jsdoc\n\n  function DerivativeAggregation(name, bucketsPath) {\n    (0, _classCallCheck3.default)(this, DerivativeAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (DerivativeAggregation.__proto__ || Object.getPrototypeOf(DerivativeAggregation)).call(this, name, 'derivative', ES_REF_URL, bucketsPath));\n  }\n  /**\n   * Set the units of the derivative values. `unit` specifies what unit to use for\n   * the x-axis of the derivative calculation\n   *\n   * @example\n   * const reqBody = esb.requestBodySearch()\n   *     .agg(\n   *         esb.dateHistogramAggregation('sales_per_month', 'date')\n   *             .interval('month')\n   *             .agg(esb.sumAggregation('sales', 'price'))\n   *             .agg(esb.derivativeAggregation('sales_deriv', 'sales').unit('day'))\n   *     )\n   *     .size(0);\n   *\n   * @param {string} unit `unit` specifies what unit to use for\n   * the x-axis of the derivative calculation\n   * @returns {DerivativeAggregation} returns `this` so that calls can be chained\n   */\n\n\n  (0, _createClass3.default)(DerivativeAggregation, [{\n    key: 'unit',\n    value: function unit(_unit) {\n      this._aggsDef.unit = _unit;\n      return this;\n    }\n  }]);\n  return DerivativeAggregation;\n}(PipelineAggregationBase);\n\nmodule.exports = DerivativeAggregation;","map":null,"metadata":{},"sourceType":"script"}