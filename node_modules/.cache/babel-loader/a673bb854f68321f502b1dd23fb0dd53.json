{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar BucketAggregationBase = require('./bucket-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-children-aggregation.html';\n/**\n * A special single bucket aggregation that enables aggregating\n * from buckets on parent document types to buckets on child documents.\n *\n * This aggregation relies on the `_parent` field in the mapping.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-children-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.termsAggregation('top-tags', 'tags.keyword')\n *             .size(10)\n *             .agg(\n *                 esb.childrenAggregation('to-answers')\n *                     .type('answer')\n *                     .agg(\n *                         esb.termsAggregation(\n *                             'top-names',\n *                             'owner.display_name.keyword'\n *                         ).size(10)\n *                     )\n *             )\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n *\n * @extends BucketAggregationBase\n */\n\nvar ChildrenAggregation = function (_BucketAggregationBas) {\n  (0, _inherits3.default)(ChildrenAggregation, _BucketAggregationBas); // eslint-disable-next-line require-jsdoc\n\n  function ChildrenAggregation(name) {\n    (0, _classCallCheck3.default)(this, ChildrenAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (ChildrenAggregation.__proto__ || Object.getPrototypeOf(ChildrenAggregation)).call(this, name, 'children'));\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on ChildrenAggregation\n   */\n\n\n  (0, _createClass3.default)(ChildrenAggregation, [{\n    key: 'field',\n    value: function field() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('field is not supported in ChildrenAggregation');\n    }\n    /**\n     * @override\n     * @throws {Error} This method cannot be called on ChildrenAggregation\n     */\n\n  }, {\n    key: 'script',\n    value: function script() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('script is not supported in ChildrenAggregation');\n    }\n    /**\n     * Sets the child type/mapping for aggregation.\n     *\n     * @param {string} type The child type that the buckets in the parent space should be mapped to.\n     * @returns {ChildrenAggregation} returns `this` so that calls can be chained\n     */\n\n  }, {\n    key: 'type',\n    value: function type(_type) {\n      this._aggsDef.type = _type;\n      return this;\n    }\n  }]);\n  return ChildrenAggregation;\n}(BucketAggregationBase);\n\nmodule.exports = ChildrenAggregation;","map":null,"metadata":{},"sourceType":"script"}