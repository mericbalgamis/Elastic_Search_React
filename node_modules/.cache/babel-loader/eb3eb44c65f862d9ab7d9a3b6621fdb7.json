{"ast":null,"code":"var _jsxFileName = \"/Users/edabalaban/bil476_projeyle_ilgili/Elastic_Search_React/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt from './datatypes.txt';\nimport json from './config/simple.json';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-prettify';\nimport { github } from 'react-json-prettify/dist/themes';\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      let json = JSON.stringify(event, null, 4);\n      console.log(json);\n    };\n\n    this.state = {\n      form: formJson,\n      response: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    axios.get().then(res => {\n      this.setState({\n        todo: res.data\n      });\n    });\n  }\n\n  sendRequest() {\n    console.log(\"handleclick\");\n    var panel = document.getElementById(\"resultPanel\");\n    axios.get('http://127.0.0.1:5000/query').then(response => {\n      console.log(response);\n      this.setState({\n        response: response.data\n      }); //panel.innerHTML=response.data; \n    });\n  }\n\n  componentWillMount() {\n    fetch(txt).then(r => r.text()).then(text => {\n      let myarray = text.split('\\n');\n      let dataArray = myarray.map((element, i) => {\n        var array = element.split(' ');\n\n        if (array.length === 4) {\n          let name = array[0];\n          name = name.replace(/_/g, ' ');\n          let type = array[1];\n          let options = array[2];\n          options = options.replace(/\\)/g, '');\n          options = options.replace(/\\(/g, '');\n          let optionsArray = options.split(',');\n          var optionData = {\n            \"options\": []\n          };\n          var data = {};\n          optionsArray.map((option, i) => {\n            optionData.options.push({\n              \"display\": option\n            });\n          });\n          data = {\n            \"id\": name,\n            \"label\": name,\n            \"description\": \"\",\n            \"type\": type,\n            \"value\": \"\",\n            \"required\": \"false\",\n            \"placeholder\": \"\",\n            \"definition\": optionData.options\n          };\n        } else if (array.length === 3) {\n          let name = array[0];\n          name = name.replace(/_/g, ' ');\n          let type = array[1];\n          return {\n            \"id\": name,\n            \"label\": name,\n            \"description\": \"\",\n            \"type\": type,\n            \"value\": \"\",\n            \"required\": \"false\",\n            \"placeholder\": \"\"\n          };\n        }\n      });\n      this.setState({\n        form: {\n          fields: dataArray\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(SplitterLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Build a Query !\", React.createElement(DynamicForm, {\n      id: \"form\",\n      config: this.state.form,\n      onSubmit: event => this.submitHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.sendRequest(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"baz\"), React.createElement(Panel, {\n      id: \"resultPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(JSONPretty, {\n      json: this.state.response,\n      theme: github,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/edabalaban/bil476_projeyle_ilgili/Elastic_Search_React/src/App.js"],"names":["React","Component","SplitterLayout","Panel","DynamicForm","myJson","txt","json","axios","JSONPretty","github","formJson","App","constructor","props","submitHandler","event","JSON","stringify","console","log","state","form","response","handleClick","bind","get","then","res","setState","todo","data","sendRequest","panel","document","getElementById","componentWillMount","fetch","r","text","myarray","split","dataArray","map","element","i","array","length","name","replace","type","options","optionsArray","optionData","option","push","fields","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport Panel from 'muicss/lib/react/panel';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt from './datatypes.txt';\nimport json from './config/simple.json';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-prettify';\nimport {github} from 'react-json-prettify/dist/themes';\n\n\n\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n      form: formJson,\n      response: ''\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    axios.get()\n      .then(res => {\n        this.setState({\n          todo: res.data\n        })\n      })\n  }\n\n  sendRequest() {\n    console.log(\"handleclick\")\n    var panel=document.getElementById(\"resultPanel\");\n    axios.get('http://127.0.0.1:5000/query')\n      .then(response => {\n        console.log(response);\n        this.setState({\n          response: response.data\n        })\n        //panel.innerHTML=response.data; \n      });\n  }\n\n\n  submitHandler = (event) => {\n    let json = JSON.stringify(event, null, 4);\n    console.log(json);\n  }\n\n  componentWillMount() {\n\n    fetch(txt)\n      .then((r) => r.text())\n      .then(text => {\n        let myarray = text.split('\\n');\n        let dataArray = myarray.map((element, i) => {\n\n\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n\n            var optionData = { \"options\": [] };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({ \"display\": option });\n            })\n\n            data = {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData.options\n            };\n          }\n\n          else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n\n        })\n        this.setState({\n          form: {\n            fields: dataArray\n          }\n        });\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <SplitterLayout>\n          <div>Build a Query !\n            <DynamicForm id=\"form\" config={this.state.form} onSubmit={(event) => this.submitHandler(event)}></DynamicForm>\n\n          </div>\n\n\n          <div>\n          <button onClick={() => this.sendRequest()}>baz</button>\n\n            <Panel id=\"resultPanel\"><JSONPretty json={this.state.response} theme={github} /></Panel>\n          </div>\n        </SplitterLayout>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}