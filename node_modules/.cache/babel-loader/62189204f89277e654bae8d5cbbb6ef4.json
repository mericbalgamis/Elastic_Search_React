{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PipelineAggregationBase = require('./pipeline-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-selector-aggregation.html';\n/**\n * A parent pipeline aggregation which executes a script which determines whether\n * the current bucket will be retained in the parent multi-bucket aggregation.\n * The specified metric must be numeric and the script must return a boolean value.\n * If the script language is expression then a numeric return value is permitted.\n * In this case 0.0 will be evaluated as false and all other values will evaluate to true.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-bucket-selector-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('histo', 'date')\n *             .interval('day')\n *             .agg(esb.termsAggregation('categories', 'category'))\n *             .agg(\n *                 esb.bucketSelectorAggregation('min_bucket_selector')\n *                     .bucketsPath({ count: 'categories._bucket_count' })\n *                     .script(esb.script('inline', 'params.count != 0'))\n *             )\n *     )\n *     .size(0);\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date')\n *             .interval('month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *             .agg(\n *                 esb.bucketSelectorAggregation('sales_bucket_filter')\n *                     .bucketsPath({ totalSales: 'total_sales' })\n *                     .script('params.totalSales > 200')\n *             )\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} bucketsPath The relative path of metric to aggregate over\n *\n * @extends PipelineAggregationBase\n */\n\nvar BucketSelectorAggregation = function (_PipelineAggregationB) {\n  (0, _inherits3.default)(BucketSelectorAggregation, _PipelineAggregationB); // eslint-disable-next-line require-jsdoc\n\n  function BucketSelectorAggregation(name, bucketsPath) {\n    (0, _classCallCheck3.default)(this, BucketSelectorAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (BucketSelectorAggregation.__proto__ || Object.getPrototypeOf(BucketSelectorAggregation)).call(this, name, 'bucket_selector', ES_REF_URL, bucketsPath));\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on BucketSelectorAggregation\n   */\n\n\n  (0, _createClass3.default)(BucketSelectorAggregation, [{\n    key: 'format',\n    value: function format() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('format is not supported in BucketSelectorAggregation');\n    }\n    /**\n     * Sets script parameter for aggregation. Required.\n     *\n     * @param {Script|string} script\n     * @returns {BucketSelectorAggregation} returns `this` so that calls can be chained\n     * @throws {TypeError} If `script` is not an instance of `Script`\n     */\n\n  }, {\n    key: 'script',\n    value: function script(_script) {\n      this._aggsDef.script = _script;\n      return this;\n    }\n  }]);\n  return BucketSelectorAggregation;\n}(PipelineAggregationBase);\n\nmodule.exports = BucketSelectorAggregation;","map":null,"metadata":{},"sourceType":"script"}