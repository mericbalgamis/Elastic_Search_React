{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isNil = require('lodash.isnil');\n\nvar _require = require('../../core'),\n    checkType = _require.util.checkType;\n\nvar SpanQueryBase = require('./span-query-base');\n/**\n * Matches spans near the beginning of a field. The span first query maps to Lucene `SpanFirstQuery`.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-span-first-query.html)\n *\n * @example\n * const spanQry = esb.spanFirstQuery()\n *     .match(esb.spanTermQuery('user', 'kimchy'))\n *     .end(3);\n *\n * @param {SpanQueryBase=} spanQry Any other span type query\n *\n * @extends SpanQueryBase\n */\n\n\nvar SpanFirstQuery = function (_SpanQueryBase) {\n  (0, _inherits3.default)(SpanFirstQuery, _SpanQueryBase); // eslint-disable-next-line require-jsdoc\n\n  function SpanFirstQuery(spanQry) {\n    (0, _classCallCheck3.default)(this, SpanFirstQuery);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (SpanFirstQuery.__proto__ || Object.getPrototypeOf(SpanFirstQuery)).call(this, 'span_first'));\n\n    if (!isNil(spanQry)) _this.match(spanQry);\n    return _this;\n  }\n  /**\n   * Sets the `match` clause which can be any other span type query.\n   *\n   * @param {SpanQueryBase} spanQry\n   * @returns {SpanFirstQuery} returns `this` so that calls can be chained.\n   */\n\n\n  (0, _createClass3.default)(SpanFirstQuery, [{\n    key: 'match',\n    value: function match(spanQry) {\n      checkType(spanQry, SpanQueryBase);\n      this._queryOpts.match = spanQry;\n      return this;\n    }\n    /**\n     * Sets the maximum end position permitted in a match.\n     *\n     * @param {number} limit The maximum end position permitted in a match.\n     * @returns {SpanFirstQuery} returns `this` so that calls can be chained.\n     */\n\n  }, {\n    key: 'end',\n    value: function end(limit) {\n      this._queryOpts.end = limit;\n      return this;\n    }\n  }]);\n  return SpanFirstQuery;\n}(SpanQueryBase);\n\nmodule.exports = SpanFirstQuery;","map":null,"metadata":{},"sourceType":"script"}