{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar BucketAggregationBase = require('./bucket-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-global-aggregation.html';\n/**\n * Defines a single bucket of all the documents within the search execution\n * context. This context is defined by the indices and the document types youâ€™re\n * searching on, but is not influenced by the search query itself.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-global-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .query(esb.matchQuery('type', 't-shirt'))\n *     .agg(\n *         esb.globalAggregation('all_products').agg(\n *             esb.avgAggregation('avg_price', 'price')\n *         )\n *     )\n *     .agg(esb.avgAggregation('t_shirts', 'price'));\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n *\n * @extends BucketAggregationBase\n */\n\nvar GlobalAggregation = function (_BucketAggregationBas) {\n  (0, _inherits3.default)(GlobalAggregation, _BucketAggregationBas); // eslint-disable-next-line require-jsdoc\n\n  function GlobalAggregation(name) {\n    (0, _classCallCheck3.default)(this, GlobalAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (GlobalAggregation.__proto__ || Object.getPrototypeOf(GlobalAggregation)).call(this, name, 'global'));\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on GlobalAggregation\n   */\n\n\n  (0, _createClass3.default)(GlobalAggregation, [{\n    key: 'field',\n    value: function field() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('field is not supported in GlobalAggregation');\n    }\n    /**\n     * @override\n     * @throws {Error} This method cannot be called on GlobalAggregation\n     */\n\n  }, {\n    key: 'script',\n    value: function script() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('script is not supported in GlobalAggregation');\n    }\n  }]);\n  return GlobalAggregation;\n}(BucketAggregationBase);\n\nmodule.exports = GlobalAggregation;","map":null,"metadata":{},"sourceType":"script"}