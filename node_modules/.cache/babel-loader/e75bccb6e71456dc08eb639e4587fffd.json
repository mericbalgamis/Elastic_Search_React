{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isNil = require('lodash.isnil');\n\nvar ScoreFunction = require('./score-function');\n\nvar _require = require('../../../core'),\n    recursiveToJSON = _require.util.recursiveToJSON;\n/**\n * The `weight` score allows you to multiply the score by the provided `weight`.\n * This can sometimes be desired since boost value set on specific queries gets\n * normalized, while for this score function it does not.\n * The number value is of type float.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-function-score-query.html#function-weight)\n *\n * @example\n * const scoreFunc = esb.weightScoreFunction(42);\n *\n * @param {number=} weight The weight of this score function.\n * @extends ScoreFunction\n */\n\n\nvar WeightScoreFunction = function (_ScoreFunction) {\n  (0, _inherits3.default)(WeightScoreFunction, _ScoreFunction); // eslint-disable-next-line require-jsdoc\n\n  function WeightScoreFunction(weight) {\n    (0, _classCallCheck3.default)(this, WeightScoreFunction);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (WeightScoreFunction.__proto__ || Object.getPrototypeOf(WeightScoreFunction)).call(this, null));\n    /*\n        null to `super` is intentional.\n        The following is a valid score function\n        It doesn't have a name field\n        {\n            \"filter\": { \"match\": { \"test\": \"cat\" } },\n            \"weight\": 42\n        }\n    */\n\n\n    if (!isNil(weight)) _this._body.weight = weight;\n    return _this;\n  }\n  /**\n   * Overrides default `toJSON` to return DSL representation of the score function\n   * class instance.\n   *\n   * @override\n   * @returns {Object} returns an Object which maps to the elasticsearch query DSL\n   */\n\n\n  (0, _createClass3.default)(WeightScoreFunction, [{\n    key: 'toJSON',\n    value: function toJSON() {\n      return recursiveToJSON(this._body);\n    }\n  }]);\n  return WeightScoreFunction;\n}(ScoreFunction);\n\nmodule.exports = WeightScoreFunction;","map":null,"metadata":{},"sourceType":"script"}