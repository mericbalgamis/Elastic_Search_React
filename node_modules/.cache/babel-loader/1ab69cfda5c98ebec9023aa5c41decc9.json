{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PipelineAggregationBase = require('./pipeline-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-cumulative-sum-aggregation.html';\n/**\n * A parent pipeline aggregation which calculates the cumulative sum of\n * a specified metric in a parent histogram (or date_histogram) aggregation.\n * The specified metric must be numeric and the enclosing histogram must\n * have min_doc_count set to 0 (default for histogram aggregations).\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-cumulative-sum-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date', 'month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *             .agg(esb.cumulativeSumAggregation('cumulative_sales', 'sales'))\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} bucketsPath The relative path of metric to aggregate over\n *\n * @extends PipelineAggregationBase\n */\n\nvar CumulativeSumAggregation = function (_PipelineAggregationB) {\n  (0, _inherits3.default)(CumulativeSumAggregation, _PipelineAggregationB); // eslint-disable-next-line require-jsdoc\n\n  function CumulativeSumAggregation(name, bucketsPath) {\n    (0, _classCallCheck3.default)(this, CumulativeSumAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (CumulativeSumAggregation.__proto__ || Object.getPrototypeOf(CumulativeSumAggregation)).call(this, name, 'cumulative_sum', ES_REF_URL, bucketsPath));\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on CumulativeSumAggregation\n   */\n\n\n  (0, _createClass3.default)(CumulativeSumAggregation, [{\n    key: 'gapPolicy',\n    value: function gapPolicy() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('gapPolicy is not supported in CumulativeSumAggregation');\n    }\n  }]);\n  return CumulativeSumAggregation;\n}(PipelineAggregationBase);\n\nmodule.exports = CumulativeSumAggregation;","map":null,"metadata":{},"sourceType":"script"}