{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MetricsAggregationBase = require('./metrics-aggregation-base');\n/**\n * A single-value metrics aggregation that keeps track and returns the\n * maximum value among the numeric values extracted from the aggregated\n * documents. These values can be extracted either from specific numeric fields\n * in the documents, or be generated by a provided script.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-max-aggregation.html)\n *\n * Aggregation that keeps track and returns the maximum value among the\n * numeric values extracted from the aggregated documents.\n *\n * @example\n * const agg = esb.maxAggregation('max_price', 'price');\n *\n * @example\n * // Use a file script\n * const agg = esb.maxAggregation('max_price').script(\n *     esb.script('file', 'my_script').params({ field: 'price' })\n * );\n *\n * @example\n * // Value script to apply the conversion rate to every value\n * // before it is aggregated\n * const agg = esb.maxAggregation('max_price').script(\n *     esb.script('inline', '_value * params.conversion_rate').params({\n *         conversion_rate: 1.2\n *     })\n * );\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} field The field to aggregate on\n *\n * @extends MetricsAggregationBase\n */\n\n\nvar MaxAggregation = function (_MetricsAggregationBa) {\n  (0, _inherits3.default)(MaxAggregation, _MetricsAggregationBa); // eslint-disable-next-line require-jsdoc\n\n  function MaxAggregation(name, field) {\n    (0, _classCallCheck3.default)(this, MaxAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (MaxAggregation.__proto__ || Object.getPrototypeOf(MaxAggregation)).call(this, name, 'max', field));\n  }\n\n  return MaxAggregation;\n}(MetricsAggregationBase);\n\nmodule.exports = MaxAggregation;","map":null,"metadata":{},"sourceType":"script"}