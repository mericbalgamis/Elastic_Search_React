{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MetricsAggregationBase = require('./metrics-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geobounds-aggregation.html';\n/**\n * A metric aggregation that computes the bounding box\n * containing all geo_point values for a field.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geobounds-aggregation.html)\n *\n * @example\n * const agg = esb.geoBoundsAggregation('viewport', 'location').wrapLongitude(true);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} field The field to aggregate on\n *\n * @extends MetricsAggregationBase\n */\n\nvar GeoBoundsAggregation = function (_MetricsAggregationBa) {\n  (0, _inherits3.default)(GeoBoundsAggregation, _MetricsAggregationBa); // eslint-disable-next-line require-jsdoc\n\n  function GeoBoundsAggregation(name, field) {\n    (0, _classCallCheck3.default)(this, GeoBoundsAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (GeoBoundsAggregation.__proto__ || Object.getPrototypeOf(GeoBoundsAggregation)).call(this, name, 'geo_bounds', field));\n  } // TODO: Override missing and take only GeoPoint as parameter\n\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on GeoBoundsAggregation\n   */\n\n\n  (0, _createClass3.default)(GeoBoundsAggregation, [{\n    key: 'format',\n    value: function format() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('format is not supported in GeoBoundsAggregation');\n    }\n    /**\n     * @override\n     * @throws {Error} This method cannot be called on GeoBoundsAggregation\n     */\n\n  }, {\n    key: 'script',\n    value: function script() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('script is not supported in GeoBoundsAggregation');\n    }\n    /**\n     *\n     * @param {boolean} allowOverlap Optional parameter which specifies whether\n     * the bounding box should be allowed to overlap the international date line.\n     * The default value is true\n     * @returns {GeoBoundsAggregation} returns `this` so that calls can be chained\n     */\n\n  }, {\n    key: 'wrapLongitude',\n    value: function wrapLongitude(allowOverlap) {\n      this._aggsDef.wrap_longitude = allowOverlap;\n      return this;\n    }\n  }]);\n  return GeoBoundsAggregation;\n}(MetricsAggregationBase);\n\nmodule.exports = GeoBoundsAggregation;","map":null,"metadata":{},"sourceType":"script"}