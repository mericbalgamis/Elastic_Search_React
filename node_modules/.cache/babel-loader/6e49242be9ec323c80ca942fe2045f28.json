{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MetricsAggregationBase = require('./metrics-aggregation-base');\n/**\n * A multi-value metrics aggregation that computes stats over numeric values\n * extracted from the aggregated documents. These values can be extracted either\n * from specific numeric fields in the documents, or be generated by a provided\n * script.\n *\n * The stats that are returned consist of: min, max, sum, count and avg.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html)\n *\n * Aggregation that computes stats over numeric values extracted from the\n * aggregated documents.\n *\n * @example\n * const agg = esb.statsAggregation('grades_stats', 'grade');\n *\n *\n * @example\n * // Use a file script\n * const agg = esb.statsAggregation('grades_stats').script(\n *     esb.script('file', 'my_script').params({ field: 'price' })\n * );\n *\n * @example\n * // Value script to apply the conversion rate to every value\n * // before it is aggregated\n * const agg = esb.statsAggregation('grades_stats').script(\n *     esb.script('inline', '_value * params.conversion_rate').params({\n *         conversion_rate: 1.2\n *     })\n * );\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} field The field to aggregate on\n *\n * @extends MetricsAggregationBase\n */\n\n\nvar StatsAggregation = function (_MetricsAggregationBa) {\n  (0, _inherits3.default)(StatsAggregation, _MetricsAggregationBa); // eslint-disable-next-line require-jsdoc\n\n  function StatsAggregation(name, field) {\n    (0, _classCallCheck3.default)(this, StatsAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (StatsAggregation.__proto__ || Object.getPrototypeOf(StatsAggregation)).call(this, name, 'stats', field));\n  }\n\n  return StatsAggregation;\n}(MetricsAggregationBase);\n\nmodule.exports = StatsAggregation;","map":null,"metadata":{},"sourceType":"script"}