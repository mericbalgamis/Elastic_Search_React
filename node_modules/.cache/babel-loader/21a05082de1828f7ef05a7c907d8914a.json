{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _require = require('../../core'),\n    checkType = _require.util.checkType;\n\nvar PipelineAggregationBase = require('./pipeline-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-percentiles-bucket-aggregation.html';\n/**\n * A sibling pipeline aggregation which calculates percentiles across all\n * bucket of a specified metric in a sibling aggregation. The specified\n * metric must be numeric and the sibling aggregation must be a multi-bucket\n * aggregation.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-percentiles-bucket-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date')\n *             .interval('month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *     )\n *     .agg(\n *         // Calculates stats for monthly sales\n *         esb.percentilesBucketAggregation(\n *             'percentiles_monthly_sales',\n *             'sales_per_month>sales'\n *         ).percents([25.0, 50.0, 75.0])\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} bucketsPath The relative path of metric to aggregate over\n *\n * @extends PipelineAggregationBase\n */\n\nvar PercentilesBucketAggregation = function (_PipelineAggregationB) {\n  (0, _inherits3.default)(PercentilesBucketAggregation, _PipelineAggregationB); // eslint-disable-next-line require-jsdoc\n\n  function PercentilesBucketAggregation(name, bucketsPath) {\n    (0, _classCallCheck3.default)(this, PercentilesBucketAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (PercentilesBucketAggregation.__proto__ || Object.getPrototypeOf(PercentilesBucketAggregation)).call(this, name, 'percentiles_bucket', ES_REF_URL, bucketsPath));\n  }\n  /**\n   * Sets the list of percentiles to calculate\n   *\n   * @param {Array<number>} percents The list of percentiles to calculate\n   * @returns {PercentilesBucketAggregation} returns `this` so that calls can be chained\n   */\n\n\n  (0, _createClass3.default)(PercentilesBucketAggregation, [{\n    key: 'percents',\n    value: function percents(_percents) {\n      checkType(_percents, Array);\n      this._aggsDef.percents = _percents;\n      return this;\n    }\n  }]);\n  return PercentilesBucketAggregation;\n}(PipelineAggregationBase);\n\nmodule.exports = PercentilesBucketAggregation;","map":null,"metadata":{},"sourceType":"script"}