{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _require = require('./util'),\n    recursiveToJSON = _require.recursiveToJSON;\n/**\n * Base class implementation for all query types.\n *\n * **NOTE:** Instantiating this directly should not be required.\n * However, if you wish to add a custom implementation for whatever reason,\n * this class should be extended and used, as validation against the class\n * type is present in various places.\n *\n * @param {string} queryType\n */\n\n\nvar Query = function () {\n  // eslint-disable-next-line require-jsdoc\n  function Query(queryType) {\n    (0, _classCallCheck3.default)(this, Query);\n    this.queryType = queryType;\n    this._body = {};\n    this._queryOpts = this._body[queryType] = {};\n  }\n  /**\n   * Sets the boost value for documents matching the `Query`.\n   *\n   * @param {number} factor\n   * @returns {Query} returns `this` so that calls can be chained.\n   */\n\n\n  (0, _createClass3.default)(Query, [{\n    key: 'boost',\n    value: function boost(factor) {\n      this._queryOpts.boost = factor;\n      return this;\n    }\n    /**\n     * Sets the query name.\n     *\n     * @example\n     * const boolQry = esb.boolQuery()\n     *     .should([\n     *         esb.matchQuery('name.first', 'shay').name('first'),\n     *         esb.matchQuery('name.last', 'banon').name('last')\n     *     ])\n     *     .filter(esb.termsQuery('name.last', ['banon', 'kimchy']).name('test'));\n     *\n     * @param {string} name\n     * @returns {Query} returns `this` so that calls can be chained.\n     */\n\n  }, {\n    key: 'name',\n    value: function name(_name) {\n      this._queryOpts._name = _name;\n      return this;\n    }\n    /**\n     * Build and returns DSL representation of the `Query` class instance.\n     *\n     * @returns {Object} returns an Object which maps to the elasticsearch query DSL\n     */\n\n  }, {\n    key: 'getDSL',\n    value: function getDSL() {\n      return this.toJSON();\n    }\n    /**\n     * Override default `toJSON` to return DSL representation for the `query`\n     *\n     * @override\n     * @returns {Object} returns an Object which maps to the elasticsearch query DSL\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return recursiveToJSON(this._body);\n    }\n  }]);\n  return Query;\n}();\n\nmodule.exports = Query;","map":null,"metadata":{},"sourceType":"script"}