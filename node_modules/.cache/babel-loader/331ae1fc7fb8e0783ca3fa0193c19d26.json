{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isNil = require('lodash.isnil');\n\nvar BucketAggregationBase = require('./bucket-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-nested-aggregation.html';\n/**\n * A special single bucket aggregation that enables aggregating nested\n * documents.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-nested-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .query(esb.matchQuery('name', 'led tv'))\n *     .agg(\n *         esb.nestedAggregation('resellers', 'resellers').agg(\n *             esb.minAggregation('min_price', 'resellers.price')\n *         )\n *     );\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} path `path` of the nested document\n *\n * @extends BucketAggregationBase\n */\n\nvar NestedAggregation = function (_BucketAggregationBas) {\n  (0, _inherits3.default)(NestedAggregation, _BucketAggregationBas); // eslint-disable-next-line require-jsdoc\n\n  function NestedAggregation(name, path) {\n    (0, _classCallCheck3.default)(this, NestedAggregation);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (NestedAggregation.__proto__ || Object.getPrototypeOf(NestedAggregation)).call(this, name, 'nested'));\n\n    if (!isNil(path)) _this._aggsDef.path = path;\n    return _this;\n  }\n  /**\n   * @override\n   * @throws {Error} This method cannot be called on NestedAggregation\n   */\n\n\n  (0, _createClass3.default)(NestedAggregation, [{\n    key: 'field',\n    value: function field() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('field is not supported in NestedAggregation');\n    }\n    /**\n     * @override\n     * @throws {Error} This method cannot be called on NestedAggregation\n     */\n\n  }, {\n    key: 'script',\n    value: function script() {\n      console.log('Please refer ' + ES_REF_URL);\n      throw new Error('script is not supported in NestedAggregation');\n    }\n    /**\n     * Sets the nested path\n     *\n     * @param {string} path `path` of the nested document\n     * @returns {NestedAggregation} returns `this` so that calls can be chained\n     */\n\n  }, {\n    key: 'path',\n    value: function path(_path) {\n      this._aggsDef.path = _path;\n      return this;\n    }\n  }]);\n  return NestedAggregation;\n}(BucketAggregationBase);\n\nmodule.exports = NestedAggregation;","map":null,"metadata":{},"sourceType":"script"}