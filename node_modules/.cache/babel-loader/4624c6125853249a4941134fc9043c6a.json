{"ast":null,"code":"var _jsxFileName = \"/home/meric/elastic/src/App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt_input from './datatypes.txt';\nimport txt_output from './datatypes_output.txt';\nimport form from './form_type.txt';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\nimport { github } from 'react-json-pretty/themes/monikai.css';\nimport queryBuilder, { filtersAggregation } from 'elastic-builder';\nimport Papa from 'papaparse';\nconst form_type = \"\";\nconst output_query = {\n  \"aggregations\": {\n    \"average_echo_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"minimum_echo_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"maximum_echo_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"max_repetition_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"min_repetition_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"average_repetition_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"max_slice_thickness\": {\n      \"max\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"min_slice_thickness\": {\n      \"min\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slice_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slab_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.MR_Spatial_Saturation_Sequence.Slab_Thickness.Value\"\n      }\n    },\n    \"max_age\": {\n      \"max\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"min_age\": {\n      \"min\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"average_age\": {\n      \"avg\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"max_flip_angle\": {\n      \"max\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"min_flip_angle\": {\n      \"min\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"average_flip_angle\": {\n      \"avg\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"max_SAR\": {\n      \"max\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"min_SAR\": {\n      \"min\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"average_SAR\": {\n      \"avg\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"max_Number_of_Averages\": {\n      \"max\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"min_Number_of_Averages\": {\n      \"min\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"average_Number_of_Averages\": {\n      \"avg\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    }\n  }\n};\nconst args = process.argv.slice(2);\nconsole.log(args);\n\nvar fileDownload = require('react-file-download');\n\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = event => {\n      let json = JSON.stringify(event, null, 4);\n      this.generateQuery(json); //console.log(json);\n    };\n\n    this.handleDownload = () => {\n      fileDownload(this.state.response, 'response.json');\n    };\n\n    this.handleCSV = () => {\n      var csv = Papa.unparse(output_query);\n      console.log(csv);\n    };\n\n    this.removeEmptyFields = (requestBody, name, field) => {\n      if (field == \"filter\") {\n        for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n          if (requestBody._body.query._body.bool.filter[i]._field.includes(name.replace(/ /g, '_'))) {\n            requestBody._body.query._body.bool.filter.splice(i, 1);\n          }\n        }\n      } else if (field == \"must\") {\n        for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n          if (requestBody._body.query._body.bool.must[i]._field.includes(name.replace(/ /g, '_'))) {\n            requestBody._body.query._body.bool.must.splice(i, 1);\n          }\n        }\n\n        return requestBody;\n      }\n    };\n\n    this.generateQuery = formResults => {\n      var form = JSON.parse(formResults);\n      let requestBodyUpdated;\n\n      if (form_type == \"input\") {\n        // Bool query\n        const requestBody = queryBuilder.requestBodySearch().query(queryBuilder.boolQuery().must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\").gt(form.data[1].value).lte(form.data[2].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\").gt(form.data[3].value).lte(form.data[4].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[5].name.replace(/ /g, '_') + \".Value\", form.data[5].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[6].name.replace(/ /g, '_') + \".Value\", form.data[6].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[7].name.replace(/ /g, '_') + \".Value\").gt(form.data[7].value).lte(form.data[8].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[9].name.replace(/ /g, '_') + \".Value\").gt(form.data[9].value).lte(form.data[10].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[11].name.replace(/ /g, '_') + \".Value\").gt(form.data[11].value).lte(form.data[12].value)).filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[13].name.replace(/ /g, '_') + \".Value\").gt(form.data[13].value).lte(form.data[14].value)).must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[15].name.replace(/ /g, '_') + \".Value\", form.data[15].value)));\n\n        for (var i = 0; i <= form.data.length - 1; i++) {\n          console.log(\"girdi\");\n\n          if (i != form.data.length - 1 && form.data[i].name == form.data[i + 1].name) {\n            if (form.data[i].value == \"\") {\n              requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"filter\");\n            }\n\n            i++;\n          } else if (i == form.data.length) {\n            if (form.data[i].value == \"\") {\n              requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\");\n            }\n          } else {\n            if (form.data[i].value == \"\") {\n              requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\");\n            }\n          }\n        }\n\n        if (requestBody._body.query._body.bool.must.length > 0) {\n          for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n            if (requestBody._body.query._body.bool.must[i]._field.includes(\"Image_Type\")) {\n              requestBody._body.query._body.bool.must.splice(i, 1);\n            }\n          }\n        }\n\n        if (requestBody._body.query._body.bool.filter.length == 0) {\n          delete requestBody._body.query._body.bool.filter;\n        }\n\n        if (requestBody._body.query._body.bool.must.length == 0) {\n          delete requestBody._body.query._body.bool.must;\n        }\n\n        if (requestBody._body.query._body.bool.filter.length != 0) {\n          for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n            if (requestBody._body.query._body.bool.filter[i]._field.includes(\"Instance_Creation_Time\")) {\n              let time_gt = requestBody._body.query._body.bool.filter[i]._queryOpts.gt;\n              let time_lte = requestBody._body.query._body.bool.filter[i]._queryOpts.lte;\n              time_gt = time_gt.replace(\":\", \"\");\n              time_lte = time_lte.replace(\":\", \"\");\n              time_gt = time_gt + \"00.000\";\n              time_lte = time_lte + \"00.000\";\n              requestBody._body.query._body.bool.filter[i]._queryOpts.gt = time_gt;\n              requestBody._body.query._body.bool.filter[i]._queryOpts.lte = time_lte;\n            }\n\n            if (requestBody._body.query._body.bool.filter[i]._field.includes(\"Study_Time\")) {\n              let time_gt = requestBody._body.query._body.bool.filter[i]._queryOpts.gt;\n              let time_lte = requestBody._body.query._body.bool.filter[i]._queryOpts.lte;\n              time_gt = time_gt.replace(\":\", \"\");\n              time_lte = time_lte.replace(\":\", \"\");\n              time_gt = time_gt + \"00.000\";\n              time_lte = time_lte + \"00.000\";\n              requestBody._body.query._body.bool.filter[i]._queryOpts.gt = time_gt;\n              requestBody._body.query._body.bool.filter[i]._queryOpts.lte = time_lte;\n            }\n          }\n        }\n\n        requestBodyUpdated = requestBody;\n        console.log(requestBody); //this.sendRequest(JSON.stringify(requestBodyUpdated));\n      } else if (form_type == \"output\") {\n        // Bool query\n        const requestBody = queryBuilder.requestBodySearch().query(queryBuilder.boolQuery().must(queryBuilder.matchQuery(\"DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value)).must(queryBuilder.matchQuery(\"DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\", form.data[1].value)).must(queryBuilder.matchQuery(\"DCMs.\" + form.data[2].name.replace(/ /g, '_') + \".Value\", form.data[2].value)).must(queryBuilder.matchQuery(\"DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\", form.data[3].value)).must(queryBuilder.matchQuery(\"DCMs.\" + form.data[4].name.replace(/ /g, '_') + \".Value\", form.data[4].value)));\n        console.log(requestBody.toJSON());\n\n        for (var i = form.data.length - 1; i >= 0; i--) {\n          if (form.data[i].value == \"\") {\n            requestBody._body.query._body.bool.must.splice(i, 1);\n          }\n        }\n\n        let str_requestBody = JSON.stringify(requestBody);\n        str_requestBody = str_requestBody.substring(0, str_requestBody.length - 1);\n        let str_output_query = JSON.stringify(output_query);\n        str_output_query = str_output_query.substring(1, str_output_query.length);\n        str_requestBody = str_requestBody + \",\" + str_output_query;\n        this.sendRequest(str_requestBody);\n      }\n    };\n\n    this.state = {\n      form: formJson,\n      response: 'response'\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    axios.get().then(res => {\n      this.setState({\n        todo: res.data\n      });\n    });\n  }\n\n  sendRequest(requestBody) {\n    var panel = document.getElementById(\"resultPanel\");\n    console.log(\"requestBody: \" + requestBody);\n    fetch('http://127.0.0.1:5000/query', {\n      method: \"POST\",\n      //Request Type \n      body: requestBody,\n      //post body \n      headers: {\n        //Header Defination \n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()) //If response is in json then in success\n    .then(responseJson => {\n      //alert(JSON.stringify(responseJson));\n      console.log(responseJson);\n      const json = JSON.stringify(responseJson, null, 4);\n      this.setState({\n        response: json\n      });\n    }) //If response is not in json then in error \n    .catch(error => {\n      alert(JSON.stringify(error)); //console.error(error);\n    });\n  }\n\n  componentWillMount() {\n    fetch(form).then(r => r.text()).then(text => {\n      form_type = text;\n    });\n\n    if (form_type == \"input\") {\n      fetch(txt_input).then(r => r.text()).then(text => {\n        let myarray = text.split('\\n');\n        let dataArray = myarray.map((element, i) => {\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n            var optionData = {\n              \"options\": []\n            };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\n                \"display\": option\n              });\n            });\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData\n            };\n          } else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n        });\n        this.setState({\n          form: {\n            fields: dataArray\n          }\n        });\n        console.log(dataArray);\n      });\n    } else if (form_type == \"output\") {\n      fetch(txt_output).then(r => r.text()).then(text => {\n        let myarray = text.split('\\n');\n        let dataArray = myarray.map((element, i) => {\n          var array = element.split(' ');\n\n          if (array.length === 4) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            let options = array[2];\n            options = options.replace(/\\)/g, '');\n            options = options.replace(/\\(/g, '');\n            let optionsArray = options.split(',');\n            var optionData = {\n              \"options\": []\n            };\n            var data = {};\n            optionsArray.map((option, i) => {\n              optionData.options.push({\n                \"display\": option\n              });\n            });\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\",\n              \"definition\": optionData\n            };\n          } else if (array.length === 3) {\n            let name = array[0];\n            name = name.replace(/_/g, ' ');\n            let type = array[1];\n            return {\n              \"id\": name,\n              \"label\": name,\n              \"description\": \"\",\n              \"type\": type,\n              \"value\": \"\",\n              \"required\": \"false\",\n              \"placeholder\": \"\"\n            };\n          }\n        });\n        this.setState({\n          form: {\n            fields: dataArray\n          }\n        });\n        console.log(dataArray);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, React.createElement(SplitterLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(DynamicForm, {\n      id: \"form\",\n      config: this.state.form,\n      onSubmit: event => this.submitHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"PanelRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"download\",\n      onClick: () => this.handleDownload(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"button\", {\n      id: \"download\",\n      onClick: () => this.handleCSV(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, \"Download CSV\"), React.createElement(JSONPretty, {\n      id: \"resultPanel\",\n      json: this.state.response,\n      theme: github,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/meric/elastic/src/App.js"],"names":["React","Component","SplitterLayout","DynamicForm","myJson","txt_input","txt_output","form","axios","JSONPretty","github","queryBuilder","filtersAggregation","Papa","form_type","output_query","args","process","argv","slice","console","log","fileDownload","require","formJson","App","constructor","props","submitHandler","event","json","JSON","stringify","generateQuery","handleDownload","state","response","handleCSV","csv","unparse","removeEmptyFields","requestBody","name","field","i","_body","query","bool","filter","length","_field","includes","replace","splice","must","formResults","parse","requestBodyUpdated","requestBodySearch","boolQuery","matchQuery","data","value","rangeQuery","gt","lte","time_gt","_queryOpts","time_lte","toJSON","str_requestBody","substring","str_output_query","sendRequest","handleClick","bind","get","then","res","setState","todo","panel","document","getElementById","fetch","method","body","headers","responseJson","catch","error","alert","componentWillMount","r","text","myarray","split","dataArray","map","element","array","type","options","optionsArray","optionData","option","push","fields","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport DynamicForm from './components/dynamicForm/dynamicForm';\nimport myJson from './datatypes.json';\nimport txt_input from './datatypes.txt';\nimport txt_output from './datatypes_output.txt';\nimport form from './form_type.txt';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\nimport { github } from 'react-json-pretty/themes/monikai.css';\nimport queryBuilder, { filtersAggregation } from 'elastic-builder';\nimport Papa from  'papaparse';\n\nconst form_type = \"\";\nconst output_query =\n{\n  \"aggregations\": {\n    \"average_echo_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"minimum_echo_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"maximum_echo_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Echo_Time.Value\"\n      }\n    },\n    \"max_repetition_time\": {\n      \"max\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"min_repetition_time\": {\n      \"min\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"average_repetition_time\": {\n      \"avg\": {\n        \"field\": \"DCMs.Repetition_Time.Value\"\n      }\n    },\n    \"max_slice_thickness\": {\n      \"max\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"min_slice_thickness\": {\n      \"min\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slice_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.Slice_Thickness.Value\"\n      }\n    },\n    \"average_slab_thickness\": {\n      \"avg\": {\n        \"field\": \"DCMs.MR_Spatial_Saturation_Sequence.Slab_Thickness.Value\"\n      }\n    },\n    \"max_age\": {\n      \"max\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"min_age\": {\n      \"min\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"average_age\": {\n      \"avg\": {\n        \"field\": \"DCMs.AGE.Value\"\n      }\n    },\n    \"max_flip_angle\": {\n      \"max\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"min_flip_angle\": {\n      \"min\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"average_flip_angle\": {\n      \"avg\": {\n        \"field\": \"DCMs.Flip_Angle.Value\"\n      }\n    },\n    \"max_SAR\": {\n      \"max\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"min_SAR\": {\n      \"min\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"average_SAR\": {\n      \"avg\": {\n        \"field\": \"DCMs.SAR.Value\"\n      }\n    },\n    \"max_Number_of_Averages\": {\n      \"max\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"min_Number_of_Averages\": {\n      \"min\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    },\n    \"average_Number_of_Averages\": {\n      \"avg\": {\n        \"field\": \"DCMs.Number_of_Averages.Value\"\n      }\n    }\n  }\n};\n\nconst args = process.argv.slice(2);\nconsole.log(args)\n\nvar fileDownload = require('react-file-download');\nvar formJson = {\n  \"name\": \"ABCz Form\",\n  \"fields\": []\n};\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n\n      form: formJson,\n      response: 'response'\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick() {\n    axios.get()\n      .then(res => {\n        this.setState({\n          todo: res.data\n        })\n      })\n  }\n\n  sendRequest(requestBody) {\n    var panel = document.getElementById(\"resultPanel\");\n    console.log(\"requestBody: \" + requestBody)\n    fetch('http://127.0.0.1:5000/query', {\n      method: \"POST\",//Request Type \n      body: requestBody,//post body \n      headers: {//Header Defination \n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      //If response is in json then in success\n      .then((responseJson) => {\n        //alert(JSON.stringify(responseJson));\n        console.log(responseJson);\n        const json = JSON.stringify(responseJson, null, 4)\n\n\n        this.setState({\n\n          response: json\n\n        });\n      })\n      //If response is not in json then in error \n      .catch((error) => {\n        alert(JSON.stringify(error));\n        //console.error(error);\n      });\n\n\n  }\n\n  submitHandler = (event) => {\n    let json = JSON.stringify(event, null, 4);\n    this.generateQuery(json);\n    //console.log(json);\n  }\n\n\n  handleDownload = () => {\n    fileDownload(this.state.response, 'response.json');\n  }\n\n  handleCSV = () => {\n    var csv = Papa.unparse(output_query);\n    console.log(csv)\n  }\n\n  removeEmptyFields = (requestBody, name, field) => {\n    if (field == \"filter\") {\n      for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n\n        if (requestBody._body.query._body.bool.filter[i]._field.includes(name.replace(/ /g, '_'))) {\n          requestBody._body.query._body.bool.filter.splice(i, 1)\n\n        }\n      }\n\n\n    }\n    else if (field == \"must\") {\n      for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n        if (requestBody._body.query._body.bool.must[i]._field.includes(name.replace(/ /g, '_'))) {\n          requestBody._body.query._body.bool.must.splice(i, 1)\n\n        }\n      }\n      return requestBody;\n\n    }\n\n  }\n\n  generateQuery = (formResults) => {\n\n    var form = JSON.parse(formResults);\n    let requestBodyUpdated;\n\n    if (form_type == \"input\") {\n\n      // Bool query\n      const requestBody = queryBuilder.requestBodySearch().query(\n        queryBuilder.boolQuery()\n          .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\").gt(form.data[1].value).lte(form.data[2].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\").gt(form.data[3].value).lte(form.data[4].value))\n          .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[5].name.replace(/ /g, '_') + \".Value\", form.data[5].value))\n          .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[6].name.replace(/ /g, '_') + \".Value\", form.data[6].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[7].name.replace(/ /g, '_') + \".Value\").gt(form.data[7].value).lte(form.data[8].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[9].name.replace(/ /g, '_') + \".Value\").gt(form.data[9].value).lte(form.data[10].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[11].name.replace(/ /g, '_') + \".Value\").gt(form.data[11].value).lte(form.data[12].value))\n          .filter(queryBuilder.rangeQuery(\"studies.DCMs.\" + form.data[13].name.replace(/ /g, '_') + \".Value\").gt(form.data[13].value).lte(form.data[14].value))\n          .must(queryBuilder.matchQuery(\"studies.DCMs.\" + form.data[15].name.replace(/ /g, '_') + \".Value\", form.data[15].value))\n      );\n\n      for (var i = 0; i <= form.data.length - 1; i++) {\n        console.log(\"girdi\")\n        if (i != form.data.length - 1 && form.data[i].name == form.data[i + 1].name) {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"filter\")\n          }\n          i++;\n        }\n        else if (i == form.data.length) {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\")\n          }\n        }\n        else {\n          if (form.data[i].value == \"\") {\n            requestBodyUpdated = this.removeEmptyFields(requestBody, form.data[i].name, \"must\")\n\n          }\n        }\n      }\n\n      if (requestBody._body.query._body.bool.must.length > 0) {\n        for (var i = 0; i < requestBody._body.query._body.bool.must.length; i++) {\n\n          if (requestBody._body.query._body.bool.must[i]._field.includes(\"Image_Type\")) {\n            requestBody._body.query._body.bool.must.splice(i, 1)\n\n          }\n        }\n      }\n\n      if (requestBody._body.query._body.bool.filter.length == 0) {\n        delete requestBody._body.query._body.bool.filter;\n      }\n\n      if (requestBody._body.query._body.bool.must.length == 0) {\n        delete requestBody._body.query._body.bool.must;\n      }\n\n      if (requestBody._body.query._body.bool.filter.length != 0) {\n\n        for (var i = 0; i < requestBody._body.query._body.bool.filter.length; i++) {\n\n          if (requestBody._body.query._body.bool.filter[i]._field.includes(\"Instance_Creation_Time\")) {\n            let time_gt = requestBody._body.query._body.bool.filter[i]._queryOpts.gt;\n            let time_lte = requestBody._body.query._body.bool.filter[i]._queryOpts.lte;\n\n            time_gt = time_gt.replace(\":\", \"\");\n            time_lte = time_lte.replace(\":\", \"\");\n\n            time_gt = time_gt + \"00.000\";\n            time_lte = time_lte + \"00.000\";\n\n            requestBody._body.query._body.bool.filter[i]._queryOpts.gt = time_gt;\n            requestBody._body.query._body.bool.filter[i]._queryOpts.lte = time_lte;\n\n          }\n\n          if (requestBody._body.query._body.bool.filter[i]._field.includes(\"Study_Time\")) {\n            let time_gt = requestBody._body.query._body.bool.filter[i]._queryOpts.gt;\n            let time_lte = requestBody._body.query._body.bool.filter[i]._queryOpts.lte;\n\n            time_gt = time_gt.replace(\":\", \"\");\n            time_lte = time_lte.replace(\":\", \"\");\n\n            time_gt = time_gt + \"00.000\";\n            time_lte = time_lte + \"00.000\";\n\n            requestBody._body.query._body.bool.filter[i]._queryOpts.gt = time_gt;\n            requestBody._body.query._body.bool.filter[i]._queryOpts.lte = time_lte;\n\n\n          }\n        }\n      }\n\n      requestBodyUpdated = requestBody;\n      console.log(requestBody)\n      //this.sendRequest(JSON.stringify(requestBodyUpdated));\n    }\n    else if (form_type == \"output\") {\n\n      // Bool query\n      const requestBody = queryBuilder.requestBodySearch().query(\n        queryBuilder.boolQuery()\n          .must(queryBuilder.matchQuery(\"DCMs.\" + form.data[0].name.replace(/ /g, '_') + \".Value\", form.data[0].value))\n          .must(queryBuilder.matchQuery(\"DCMs.\" + form.data[1].name.replace(/ /g, '_') + \".Value\", form.data[1].value))\n          .must(queryBuilder.matchQuery(\"DCMs.\" + form.data[2].name.replace(/ /g, '_') + \".Value\", form.data[2].value))\n          .must(queryBuilder.matchQuery(\"DCMs.\" + form.data[3].name.replace(/ /g, '_') + \".Value\", form.data[3].value))\n          .must(queryBuilder.matchQuery(\"DCMs.\" + form.data[4].name.replace(/ /g, '_') + \".Value\", form.data[4].value))\n      );\n\n      console.log(requestBody.toJSON())\n      for (var i = form.data.length - 1; i >= 0; i--) {\n        if (form.data[i].value == \"\") {\n          requestBody._body.query._body.bool.must.splice(i, 1);\n        }\n      }\n\n      let str_requestBody = (JSON.stringify(requestBody));\n      str_requestBody = str_requestBody.substring(0, str_requestBody.length - 1);\n      let str_output_query = JSON.stringify(output_query);\n      str_output_query = str_output_query.substring(1, str_output_query.length);\n      str_requestBody = str_requestBody + \",\" + str_output_query;\n\n      this.sendRequest(str_requestBody);\n    }\n\n  }\n\n  componentWillMount() {\n\n    fetch(form)\n    .then((r) => r.text())\n    .then(text => {\n      form_type = text;\n    })\n\n    if (form_type == \"input\") {\n\n      fetch(txt_input)\n        .then((r) => r.text())\n        .then(text => {\n          let myarray = text.split('\\n');\n          let dataArray = myarray.map((element, i) => {\n\n\n            var array = element.split(' ');\n\n            if (array.length === 4) {\n\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n              let options = array[2];\n              options = options.replace(/\\)/g, '');\n              options = options.replace(/\\(/g, '');\n              let optionsArray = options.split(',');\n\n              var optionData = { \"options\": [] };\n              var data = {};\n              optionsArray.map((option, i) => {\n                optionData.options.push({ \"display\": option });\n              })\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\",\n                \"definition\": optionData\n              };\n\n            }\n\n            else if (array.length === 3) {\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\"\n              };\n            }\n\n          })\n\n          this.setState({\n            form: {\n              fields: dataArray\n            }\n          });\n          console.log(dataArray);\n\n        })\n    }\n    else if (form_type == \"output\") {\n\n\n      fetch(txt_output)\n        .then((r) => r.text())\n        .then(text => {\n          let myarray = text.split('\\n');\n          let dataArray = myarray.map((element, i) => {\n\n\n            var array = element.split(' ');\n\n            if (array.length === 4) {\n\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n              let options = array[2];\n              options = options.replace(/\\)/g, '');\n              options = options.replace(/\\(/g, '');\n              let optionsArray = options.split(',');\n\n              var optionData = { \"options\": [] };\n              var data = {};\n              optionsArray.map((option, i) => {\n                optionData.options.push({ \"display\": option });\n              })\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\",\n                \"definition\": optionData\n              };\n\n            }\n\n            else if (array.length === 3) {\n              let name = array[0];\n              name = name.replace(/_/g, ' ');\n              let type = array[1];\n\n              return {\n                \"id\": name,\n                \"label\": name,\n                \"description\": \"\",\n                \"type\": type,\n                \"value\": \"\",\n                \"required\": \"false\",\n                \"placeholder\": \"\"\n              };\n            }\n\n          })\n\n          this.setState({\n            form: {\n              fields: dataArray\n            }\n          });\n          console.log(dataArray);\n\n        })\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <SplitterLayout>\n          <div className=\"Form\">\n\n            <DynamicForm id=\"form\" config={this.state.form} onSubmit={(event) => this.submitHandler(event)}></DynamicForm>\n\n          </div>\n\n\n          <div className=\"PanelRight\">\n            <button id=\"download\" onClick={() => this.handleDownload()}>Download</button>\n            <button id=\"download\" onClick={() => this.handleCSV()}>Download CSV</button>\n\n            <JSONPretty id=\"resultPanel\" json={this.state.response} theme={github} />\n          </div>\n        </SplitterLayout>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}