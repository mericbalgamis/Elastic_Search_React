{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar PipelineAggregationBase = require('./pipeline-aggregation-base');\n\nvar ES_REF_URL = 'https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-avg-bucket-aggregation.html';\n/**\n * A sibling pipeline aggregation which calculates the (mean) average value\n * of a specified metric in a sibling aggregation. The specified metric must\n * be numeric and the sibling aggregation must be a multi-bucket aggregation.\n *\n * [Elasticsearch reference](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-avg-bucket-aggregation.html)\n *\n * @example\n * const reqBody = esb.requestBodySearch()\n *     .agg(\n *         esb.dateHistogramAggregation('sales_per_month', 'date')\n *             .interval('month')\n *             .agg(esb.sumAggregation('sales', 'price'))\n *     )\n *     .agg(\n *         esb.avgBucketAggregation(\n *             'avg_monthly_sales',\n *             'sales_per_month>sales'\n *         )\n *     )\n *     .size(0);\n *\n * @param {string} name The name which will be used to refer to this aggregation.\n * @param {string=} bucketsPath The relative path of metric to aggregate over\n *\n * @extends PipelineAggregationBase\n */\n\nvar AvgBucketAggregation = function (_PipelineAggregationB) {\n  (0, _inherits3.default)(AvgBucketAggregation, _PipelineAggregationB); // eslint-disable-next-line require-jsdoc\n\n  function AvgBucketAggregation(name, bucketsPath) {\n    (0, _classCallCheck3.default)(this, AvgBucketAggregation);\n    return (0, _possibleConstructorReturn3.default)(this, (AvgBucketAggregation.__proto__ || Object.getPrototypeOf(AvgBucketAggregation)).call(this, name, 'avg_bucket', ES_REF_URL, bucketsPath));\n  }\n\n  return AvgBucketAggregation;\n}(PipelineAggregationBase);\n\nmodule.exports = AvgBucketAggregation;","map":null,"metadata":{},"sourceType":"script"}